{"version":3,"sources":["components/FeedbackButton/FeedbackButton.jsx","components/Notification/Notification.jsx","components/Section/Section.jsx","components/StatisticItem/StatisticItem.jsx","components/StatisticList/StatisticList.jsx","App.js","index.js","components/FeedbackButton/FeedbackButton.module.css","components/Section/Section.module.css","components/StatisticList/StatisticList.module.css"],"names":["FeedbackButton","options","onIncreaseFeedback","className","style","buttonList","map","option","name","type","onClick","toString","Notification","message","Section","title","children","section","StatisticItem","value","StatisticList","state","total","positive","namesKeys","Object","keys","statisticList","App","useState","goodFeedback","setGoodFeedback","neutralFeedback","setNeutralFeedback","badFeedback","setBadFeedback","countTotalFeedbacks","stateObj","event","target","toast","success","prevState","info","error","toFixed","autoClose","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"kSAyBeA,EAtBQ,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,mBAAZ,OACnB,oBAAIC,UAAWC,IAAMC,WAArB,SACKJ,EAAQK,KAAI,SAAAC,GAAM,OACf,6BACI,wBACIJ,UAAWC,IAAMG,GACjBC,KAAMD,EACNE,KAAK,SACLC,QAASR,EAJb,SAMKK,KAPAA,EAAOI,kBCEbC,EANM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAAiB,4BAAIA,K,gBCa3BC,EAZC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACZ,0BAASb,UAAWC,IAAMa,QAA1B,UACKF,GAAS,6BAAKA,IACdC,MCSME,EAbO,SAAC,GAAqB,IAAnBV,EAAkB,EAAlBA,KAAMW,EAAY,EAAZA,MAC3B,OACI,iCACKX,EADL,KACaW,M,gBCwBNC,EAzBO,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAC7BC,EAAYC,OAAOC,KAAKL,GAC9B,OACI,qBAAIlB,UAAWC,IAAMuB,cAArB,UACKH,EAAUlB,KAAI,SAAAE,GAAI,OACf,6BACI,cAAC,EAAD,CAAeA,KAAMA,EAAMW,MAAOE,EAAMb,MADnCA,EAAKG,eAIlB,6BACI,2CAAcW,OAElB,6BACI,wDAA2BC,EAA3B,aCmDDK,EA5DH,WACR,MAAwCC,mBAAS,GAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAA8CF,mBAAS,GAAvD,mBAAOG,EAAP,KAAwBC,EAAxB,KACA,EAAsCJ,mBAAS,GAA/C,mBAAOK,EAAP,KAAoBC,EAApB,KAwBMC,EAAsB,kBACxBN,EAAeE,EAAkBE,GAM/BG,EAAW,CAAEP,eAAcE,kBAAiBE,eAElD,OACI,qCACI,cAAC,EAAD,CAASnB,MAAM,yBAAf,SACI,cAAC,EAAD,CACIb,mBAnCS,SAAAoC,GAIrB,OAHiBA,EAAMC,OAAf/B,MAIJ,IAAK,OACDgC,IAAMC,QAAQ,uCACdV,GAAgB,SAAAW,GAAS,OAAIA,EAAY,KACzC,MACJ,IAAK,UACDF,IAAMG,KAAK,0CACXV,GAAmB,SAAAS,GAAS,OAAIA,EAAY,KAC5C,MACJ,IAAK,MACDF,IAAMI,MAAM,sCACZT,GAAe,SAAAO,GAAS,OAAIA,EAAY,OAqBpCzC,QARQ,CAAC,OAAQ,UAAW,WAWpC,cAAC,EAAD,CAASc,MAAM,YAAf,SAC+B,IAA1BqB,IACG,cAAC,EAAD,CAAcvB,QAAQ,sBAEtB,cAAC,EAAD,CACIS,MAAOc,IACPb,UAnBdO,EAAeM,IAAyB,KAAKS,QAAQ,GAoBvCxB,MAAOgB,MAInB,cAAC,IAAD,CAAgBS,UAAW,UCzDvCC,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,U,kBCT5BC,EAAOC,QAAU,CAAC,YAAc,oCAAoC,KAAO,+DAA+D,QAAU,kEAAkE,IAAM,8DAA8D,WAAa,qC,kBCAvSD,EAAOC,QAAU,CAAC,QAAU,2B,kBCA5BD,EAAOC,QAAU,CAAC,cAAgB,wC","file":"static/js/main.42c65a54.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\nimport style from './FeedbackButton.module.css';\r\n\r\nconst FeedbackButton = ({ options, onIncreaseFeedback }) => (\r\n    <ul className={style.buttonList}>\r\n        {options.map(option => (\r\n            <li key={option.toString()}>\r\n                <button\r\n                    className={style[option]}\r\n                    name={option}\r\n                    type=\"button\"\r\n                    onClick={onIncreaseFeedback}\r\n                >\r\n                    {option}\r\n                </button>\r\n            </li>\r\n        ))}\r\n    </ul>\r\n);\r\n\r\nFeedbackButton.propTypes = {\r\n    options: PropTypes.arrayOf(PropTypes.string.isRequired),\r\n    onIncreaseFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackButton;\r\n","import PropTypes from 'prop-types';\r\n\r\nconst Notification = ({ message }) => <p>{message}</p>;\r\n\r\nNotification.propTypes = {\r\n    message: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Notification;\r\n","import PropTypes from 'prop-types';\r\nimport style from './Section.module.css';\r\n\r\nconst Section = ({ title, children }) => (\r\n    <section className={style.section}>\r\n        {title && <h2>{title}</h2>}\r\n        {children}\r\n    </section>\r\n);\r\n\r\nSection.propTypes = {\r\n    title: PropTypes.string,\r\n    children: PropTypes.node,\r\n};\r\n\r\nexport default Section;\r\n","import PropTypes from 'prop-types';\r\n\r\nconst StatisticItem = ({ name, value }) => {\r\n    return (\r\n        <span>\r\n            {name}: {value}\r\n        </span>\r\n    );\r\n};\r\n\r\nStatisticItem.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    value: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default StatisticItem;\r\n","import PropTypes from 'prop-types';\r\nimport StatisticItem from '../StatisticItem';\r\nimport style from './StatisticList.module.css';\r\n\r\nconst StatisticList = ({ state, total, positive }) => {\r\n    const namesKeys = Object.keys(state);\r\n    return (\r\n        <ul className={style.statisticList}>\r\n            {namesKeys.map(name => (\r\n                <li key={name.toString()}>\r\n                    <StatisticItem name={name} value={state[name]} />\r\n                </li>\r\n            ))}\r\n            <li>\r\n                <span>Total: {total}</span>\r\n            </li>\r\n            <li>\r\n                <span>Positive feedbacks: {positive}%</span>\r\n            </li>\r\n        </ul>\r\n    );\r\n};\r\n\r\nStatisticList.propTypes = {\r\n    state: PropTypes.objectOf(PropTypes.number.isRequired),\r\n    total: PropTypes.number.isRequired,\r\n    positive: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default StatisticList;\r\n","import { useState } from 'react';\nimport { toast, ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport FeedbackButton from './components/FeedbackButton';\nimport Notification from './components/Notification';\nimport Section from './components/Section';\nimport StatisticList from './components/StatisticList';\n\nconst App = () => {\n    const [goodFeedback, setGoodFeedback] = useState(0);\n    const [neutralFeedback, setNeutralFeedback] = useState(0);\n    const [badFeedback, setBadFeedback] = useState(0);\n\n    const increaseFeedback = event => {\n        const { name } = event.target;\n        // console.log(name);\n\n        switch (name) {\n            case 'good':\n                toast.success('you left GOOD feedback 😃');\n                setGoodFeedback(prevState => prevState + 1);\n                break;\n            case 'neutral':\n                toast.info('you left NEUTRAL feedback 😐');\n                setNeutralFeedback(prevState => prevState + 1);\n                break;\n            case 'bad':\n                toast.error('you left BAD feedback 😞');\n                setBadFeedback(prevState => prevState + 1);\n                break;\n            default:\n                break;\n        }\n    };\n\n    const countTotalFeedbacks = () =>\n        goodFeedback + neutralFeedback + badFeedback;\n\n    const countPositiveFeedbackPercentage = () =>\n        ((goodFeedback / countTotalFeedbacks()) * 100).toFixed(0);\n\n    const feedbackOptions = ['good', 'neutral', 'bad'];\n    const stateObj = { goodFeedback, neutralFeedback, badFeedback };\n\n    return (\n        <>\n            <Section title=\"Please, leave feedback\">\n                <FeedbackButton\n                    onIncreaseFeedback={increaseFeedback}\n                    options={feedbackOptions}\n                />\n            </Section>\n            <Section title=\"Statistic\">\n                {countTotalFeedbacks() === 0 ? (\n                    <Notification message=\"No feedback given\" />\n                ) : (\n                    <StatisticList\n                        total={countTotalFeedbacks()}\n                        positive={countPositiveFeedbackPercentage()}\n                        state={stateObj}\n                    />\n                )}\n            </Section>\n            <ToastContainer autoClose={2000} />\n        </>\n    );\n};\n\nexport default App;\n\n// export default class App extends Component {\n//     state = {\n//         good: 0,\n//         neutral: 0,\n//         bad: 0,\n//     };\n\n//     increaseFeedback = event => {\n//         const { name } = event.target;\n//         console.log(name);\n\n//         switch (name) {\n//             case 'good':\n//                 toast.success('you left GOOD feedback 😃');\n//                 break;\n//             case 'neutral':\n//                 toast.info('you left NEUTRAL feedback 😐');\n//                 break;\n//             case 'bad':\n//                 toast.error('you left BAD feedback 😞');\n//                 break;\n//             default:\n//                 break;\n//         }\n\n//         this.setState(prevState => {\n//             return { [name]: prevState[name] + 1 };\n//         });\n//     };\n\n//     countTotalFeedbacks = () => {\n//         const stateValues = Object.values(this.state);\n//         return stateValues.reduce((acc, value) => acc + value, 0);\n//     };\n\n//     countPositiveFeedbackPercentage = () => {\n//         return ((this.state.good / this.countTotalFeedbacks()) * 100).toFixed(\n//             0,\n//         );\n//     };\n\n//     render() {\n//         const feedbackOptions = Object.keys(this.state);\n//         const total = this.countTotalFeedbacks();\n//         const positive = this.countPositiveFeedbackPercentage();\n//         const stateObj = this.state;\n\n//         return (\n//             <>\n//                 <Section title=\"Please, leave feedback\">\n//                     <FeedbackButton\n//                         onIncreaseFeedback={this.increaseFeedback}\n//                         options={feedbackOptions}\n//                     />\n//                 </Section>\n//                 <Section title=\"Statistic\">\n//                     {total === 0 ? (\n//                         <Notification message=\"No feedback given\" />\n//                     ) : (\n//                         <StatisticList\n//                             total={total}\n//                             positive={positive}\n//                             state={stateObj}\n//                         />\n//                     )}\n//                 </Section>\n//                 <ToastContainer autoClose={2000} />\n//             </>\n//         );\n//     }\n// }\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'modern-normalize/modern-normalize.css';\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"feedbackBtn\":\"FeedbackButton_feedbackBtn__3Vd1Y\",\"good\":\"FeedbackButton_good__1PW9e FeedbackButton_feedbackBtn__3Vd1Y\",\"neutral\":\"FeedbackButton_neutral__1X6NA FeedbackButton_feedbackBtn__3Vd1Y\",\"bad\":\"FeedbackButton_bad__1Opd4 FeedbackButton_feedbackBtn__3Vd1Y\",\"buttonList\":\"FeedbackButton_buttonList__293vw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section___80o5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statisticList\":\"StatisticList_statisticList__27Cvq\"};"],"sourceRoot":""}